const path = require('path');
const fs = require('fs-extra');
const globby = require('./globby-patch').sync;

let tmp = `
// -------------------------------------------------------------------
// This file was automatically generated by the 'gulp manifest' task
// DO NOT directly edit it!
// -------------------------------------------------------------------

module.exports = {
    %manifest,
};
`;

module.exports = config => {
    const templateKeys = [];

    if (ReactiumGulp) ReactiumGulp.Hook.runSync('manifest', config);

    // Create the empty manifest
    const manifest = Object.keys(config.DDD)
        .filter(key => Boolean(key !== 'gulp'))
        .reduce((obj, key) => {
            obj[key] = [];
            templateKeys.push(`${key}: [%${key}]`);
            return obj;
        }, {});

    // Update the tmp
    tmp = tmp.replace(/%manifest/, templateKeys.join(',\n\t'));

    // Find items and add to manifest
    Object.keys(config.DDD)
        .filter(key => Boolean(key !== 'gulp'))
        .forEach(key => {
            const value = config.DDD[key];
            globby(value, { dot: true }).forEach(item => {
                if (item.includes('.core/reactium-lib')) return;

                manifest[key].push(
                    `() => import('~${path.normalize(
                        item.replace(process.cwd(), ''),
                    )}')`,
                );
            });

            tmp =
                manifest[key].length < 1
                    ? tmp.replace(`%${key}`, '')
                    : tmp.replace(
                          `%${key}`,
                          `\n\t\t${manifest[key].join(',\n\t\t')}\n\t`,
                      );
        });

    // Write the manifest file to disk
    fs.writeFileSync(config.manifestFile, tmp);
};
